<link rel="stylesheet" href="../stylesheets/intlTelInput.css">

<style type="text/css">
    .iti-flag {background-image: url("../flags.png");}

    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .iti-flag {background-image: url("../flags@2x.png");}
    }
</style>

<form id="myForm">
    <input id="phone" type="tel">
    <span id="valid-msg" class="hide">
        <!--âœ“ Valid-->
    </span>
    <span id="error-msg" class="hide"></span>
    <button>Try me</button>
</form>


<script src="../javascripts/intlTelInput.js"></script>
<script>
    // var input = document.querySelector("#phone");
    // window.intlTelInput(input,{initialCountry: "gb", utilsScript: "../javascripts/utils.js"});
    var input = document.querySelector("#phone"),
        errorMsg = document.querySelector("#error-msg"),
        validMsg = document.querySelector("#valid-msg");

    // here, the index maps to the error code returned from getValidationError - see readme
    var errorMap = [ "Invalid number", "Invalid country code", "Too short", "Too long", "Invalid number"];

    // initialise plugin
    // var iti = window.intlTelInput(input, {
    //     utilsScript: "../../build/js/utils.js?1537717752654"
    // });
    var iti = window.intlTelInput(input,{initialCountry: "gb", utilsScript: "../javascripts/utils.js?1537717752654"});
    var reset = function() {
        input.classList.remove("error");
        errorMsg.innerHTML = "";
        errorMsg.classList.add("hide");
        validMsg.classList.add("hide");
    };

    // on blur: validate
    input.addEventListener('blur', function() {
        reset();
        if (input.value.trim()) {
            if (iti.isValidNumber()) {
                validMsg.classList.remove("hide");
            } else {
                input.classList.add("error");
                var errorCode = iti.getValidationError();
                errorMsg.innerHTML = errorMap[errorCode];
                errorMsg.classList.remove("hide");
            }
        }
    });

    // on keyup / change flag: reset
    input.addEventListener('change', reset);
    input.addEventListener('keyup', reset);
</script>